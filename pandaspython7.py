""" Pandas """
import pandas as pd
import numpy as np

# !!! Տնայինի համար անհրաժեշտ բոլոր csv ֆայլերը կցված են


# 1. Պիտոնի պահատական գեներացված թվային լիստերից կամ np զանգվածներից ստեղծել երկու pandas series: Այնուհետև ստեղծել
# երրորդ series, որը կպարունակի երկրորդի այն տարրերը, որոնք մեծ են առաջինի տարրերից։

# arr1 = np.random.randint(1, 10, 10)
# arr2 = np.random.randint(1, 10, 10)
# print(arr1)
# print(arr2)
#
# s1 = pd.Series(arr1)
# s2 = pd.Series(arr2)
# print(s1)
# print(s2)
#
# s3 = s2[s2 > s1]
# print(s3)

# 2. Ստեղծել հեռախոսային գրքույկ ներկայացնող DataFrame: Այն պետք է ունենա առնվազն հինգ մարդու տվյալ։ Առաջին սյան մեջ
# լինելու է մարդու անունը և ազգանունը, իսկ երկրորդ սյան մեջ նրա հեռախոսահամարը։

# lst = [['Ani Avetisyan', '093546352'],
#        ['Rima Avetisyan', '077586548'],
#        ['Mayis Avetisyan', '095887548'],
#        ['Arman Avetisyan', '022545885'],
#        ['Armen Avetisyan', '036598575'],]
#
#
# tell_df = pd.DataFrame(lst, columns=['Name', 'Tell.'])
# print(tell_df)

# 3. Ստեղծել 1-100 պատահական ամբողջ թվերից լիստ և այն վերածեք Series-ի։ Այնուհետև սորտավորել այն։

# arr = np.random.randint(1, 100, 30)
# s1 = pd.Series(arr)
# print(s1)
# s1 = s1.sort_values()
# print(s1)

# 4. Ստեղծել փոքրատառով սկսվող բառերից բաղկացած լիստ։ Դրանից ստանալ Series: Այնուհետև Series-ի միջի բոլոր բառերի վերջին
# և առաջին տառերը վերածել մեծատառերի։
#
# lst = ['ahjdjdh', 'swgdjsg', 'dubfbf', 'ddhhh']
# s1 = pd.Series(map(lambda x: x[::-1], lst))
# print(s1)
# s1 = s1.str.capitalize()
# print(s1)
# s1 = pd.Series(map(lambda x: x[::-1], s1))
# print(s1)
# s1 = s1.str[0].capitalize()
#
# # s1 = pd.Series(map(lambda x: x[0].upper()+x[1: len(x)]+x[-1].upper(), lst))
# print(s1)

# Կարելի է անել ցիկլով, սակայն փորձեք գտնել հենց pandas.Series-ին պատկանող համապտասխան մեթոդ։

# 5. Ունենք dictionary, որը պարունակում է ուսանողների անունները և նրանց ավարտական քննության գնահատականը։ Դրանից ստեղծել
# Dataframe։ Ինդեքսավորումը փոխել և թվայինից դարձնել տառային, այսինքն Jack-ը լինելու է a ինդեքսով տողում, John-ը b և
# այլն։
# Այնուհետև DataFrame-ին ավելացնել ևս մեկ սյուն, որը կկոչվի 'passed'։ Այն ուսանողը, ով հավաքել է 8 կամ բարձր, անցնում է,
# այսինքն 'passed' արժեքը True է, իսկ հակառակ դեպքում՝ False:

# dic = {'Name': ['Armen', 'Syuzi', 'Rima', 'Ani'],
#        'Gnahatkan': [18, 15, 12, 7]}
#
# df1 = pd.DataFrame(dic)
# print(df1)
# df1 = df1.rename(index={0:'a', 1:'b', 2:'c', 3:'d'})
# df1['passed'] = df1['Gnahatkan'] > 8
# print(df1)


# 6. Կարդալ այդ world_religions.csv-ն և պահել փոփոխականի մեջ։
#   ```
#   ա) Ստուգել առաջին տաս տողը

df = pd.read_csv('pandas_cvs\Rima Avetisyan - world_religions.csv')
print(df.head())

#   բ) Գտնել երկրների սյան մեջ չկրկնվող անունների քանակը

print('չկրկնվող անունների քանակը ', df['Country'].nunique())

#   գ) Ջնջել այն բոլոր տողերը, որտեղ Country-ն All Countries է

df.drop(df[df.Country == ' All Countries'].index, inplace=True)

#   դ) Ստուգել, արդյոք կան բացակայող/nan արժեքներ դատասեթի մեջ

print(df)
df.isna()

#   ե) Փոխարինել այդ բացակայող արժեքները կամ սյան միջին արժեքով, կամ, ցանկության դեպքում կարող եք այդ արժեքները լցնել
#   նորմալ բաշխումից պատահական կերպով գեներացված արժեքներով։ Նորմալ բաշխման միջին արժեքը պետք է հավասար լինի սյան միջին
#   արժեքին, լայնությունը (սիգման) լինի 0,5


#   զ) Փոփոխությունից հետո հաստատել, որ դատասեթում այլևս վատ արժեքներ չկան
#   է) Վերջապես գումարել բոլոր սյուները, համեմատել արժեքները սորտավորելով։ Արդյունքը պետք է ներկայացվի այսպես, կրոնի
#   անունը որպես ինդեքս կամ key, իսկ տոկոսը որպես արժեք (value)։ Կարող եք արդյունքը ներկայացնել պիտոնական dict-ով կամ
#   pd.Series-ով





# 7. Կարդալ laptops.csv ֆայլը։ Գտնել՝
#
#    1. 5 ամենաթանկ laptop-ները f’{brand}։ {model}։ {price}’ այս ֆորմատով
#    2. 5 ամենամատչելի laptop-ները f’{brand} {model} {price}’ այս ֆորմատով
#    3. բոլոր օպերացիոն համակարգերը և իրենց մոդելների քանակը(օրինակ՝ windows: 456, macOS:46, Linux: 876...)
#    4. 5 ամենածանր laptop-ները f’{brand} {model} {weight}’ այս ֆորմատով
#    5. 5 ամենահզոր RAM ունեցող laptop-ները f’{brand} {model} {ram}’ այս ֆորմատով
#    բոլոր չափի RAM-երը և իրենց մոդելների քանակը(օրինակ՝ 4GB: 456, 8GB:46, 10GB: 876...)
#    բոլոր brand-երը և իրենց մոդելների քանակը(օրինակ՝ apple: 11, Dell:80...)

# 8. Կարդալ imdb_top_1000.csv ֆայլը։ Այստեղ կտեսնենք IMDB կայքի տվյալների բազայի լավագույն 1000 ֆիլմերի ցանկը։

#df = pd.read_csv('pandas_cvs\Rima Avetisyan - imdb_top_1000.csv')

#     1. Ստուգել դատասեթի առաջին 8 տողը
#     2. Գտնել բազայում ներառված ամենահին ֆիլմը և տպել դրա ռեժիսորին և ժանրը
#     3. Գտնել ամենամեծ քանակությամբ ֆիլմեր ունեցող ռեժիսորին (կարող եք խմբավորել ըստ ռեժիսորների)
#     4. Հաշվել այդ ռեժիսորի ֆիլմերի միջին, առավելագույն և նվազագույն ռեյտինգները։
#     5․ Գտնել այն ռեժիսորներին, ովքեր դատասեթում ունեն 1-ից ավել ֆիլմ և գտնել նվազագույն միջին ռեյտինգ ունեցողին։
#     6. Տպել Meta score սյան միջին և միջին քառակուսային շեղման արժեքները բոլոր ռեժիսորների համար
#     7. Դատասեթում բացակայող արժեքները լրացնել այդ սյան միջին արժեքով։ Եթե սյունը թվային տիպ չունի, պարզապես ջնջել
#     այդտեղ բացակայող արժեքներին համապատասխան տողերը
#     8. Սորտավորել դատասեթը ըստ տարեթվերի և այն պահել նոր ֆայլի մեջ